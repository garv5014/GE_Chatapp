version: "3.9"

services:
  postgres:
    image: postgres:latest
    container_name: GE-chat-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - /home/garrett/chatdata/data:/var/lib/postgresql/data
      - ../../chatdb/initscripts:/docker-entrypoint-initdb.d
    restart: always
     
  chatapp:
    container_name: GE_chatapp
    build:
      context: ../../
      dockerfile: GE_Chatapp/GE_Chatapp/Dockerfile

    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};
      - ApiBaseAddress=https://gechatapp.duckdns.org:1360/api
      - AspNetCore_ENVIRONMENT=Development
    restart: always 

  swag:
    image: lscr.io/linuxserver/swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
      - URL=gechatapp.duckdns.org
      - VALIDATION=duckdns
      - DUCKDNSTOKEN=${DUCKDNSTOKEN}
      - STAGING=false
    volumes:
      - /home/garrett/data/swag:/config
      - ./swag-default.conf:/config/nginx/site-confs/default.conf
    ports:
      - 0.0.0.0:1360:443
    restart: always

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    command: ["--config=/etc/otelcol-contrib/config.yml", "${OTELCOL_ARGS}"]
    volumes:
      - ./configs/otel-collector-config.yml:/etc/otelcol-contrib/config.yml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension 

  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: always
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=${ GF_SECURITY_ADMIN_USER }
      - GF_SECURITY_ADMIN_PASSWORD= ${ GF_SECURITY_ADMIN_PASSWORD }
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources

  loki:
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yml
    container_name: loki
    restart: always
    volumes:
     - ./configs/loki.yml:/etc/loki/local-config.yml
    ports:
      - "3100:3100"