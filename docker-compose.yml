version: '3.4'

services:
  ge_chatapp:
    image: ${DOCKER_REGISTRY-}gechatapp
    container_name: ge_chatapp
    build:
      context: .
      dockerfile: GE_Chatapp/GE_Chatapp/Dockerfile
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=chatdb;Username=admin;Password=password!
    volumes:
      - images_store:/app/images

  postgres:
    image: postgres:latest
    container_name: chatappdb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: chatdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password!
    volumes:
      - chat_db_data:/var/lib/postgresql/data
      - ./chatdb/initscripts:/docker-entrypoint-initdb.d
   
  ge_otel_collector:
    image: otel/opentelemetry-collector-contrib
    container_name: ge_otel_collector
    command: ["--config=/etc/otelcol-contrib/config.yml", "${OTELCOL_ARGS}"]
    volumes:
      - ./ops/development/otel-collector-config.yml:/etc/otelcol-contrib/config.yml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension 

  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
     - ./ops/development/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./ops/development/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/default.yml
      - ./ops/development/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./ops/development/dashboards:/var/lib/grafana/dashboards

  loki:
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/local-config.yml
    container_name: loki
    volumes:
     - ./ops/development/loki.yml:/etc/loki/local-config.yml
    ports:
      - "3100:3100"

volumes:
  chat_db_data:
  images_store:  
